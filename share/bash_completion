#!/bin/bash
_simbol() {
    COMPREPLY=()

    local cur="${COMP_WORDS[COMP_CWORD]}"
    let i=1
    local local prev="${COMP_WORDS[COMP_CWORD-${i}]}"
    while [ ${prev:0:1} == '-' ]; do
        ((++i))
        eval "local prev=\"\${COMP_WORDS[COMP_CWORD-${i}]}\""
    done

    case ${prev} in
        simbol)
            local opts
            for profile in USER_MODULES CORE_MODULES; do
                eval $(::core:dereference.eval profile) #. Will create ${profile}
                for module in ${!profile[@]}; do
                    if [ ${profile[${module}]} -eq 1 ]; then
                        opts="${opts} ${module}"
                    fi
                done
            done
            COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
        ;;
        *)
            core:softimport ${prev}
            local names=$(:core:complete ${prev})
            COMPREPLY=($(compgen -W "${names}" -- ${cur}))
        ;;
    esac
}

if [ ${TERM} != 'dumb' ]; then
    SIMBOL_PROFILE=$(${HOME}/.simbol/bin/activate)
    if [ $? -eq 0 ]; then
        export SIMBOL_PROFILE
        source ~/.simbol/.scm/lib/libsh/libsimbol/libsimbol.sh
        complete -F _simbol simbol
    fi
fi
